This README file contains information on the contents of the
comodoo layer.

Please see the corresponding sections below for details.


Dependencies
============

This layer depends on:

  URI: git://git.openembedded.org/bitbake
  branch: krogoth

  URI: git://git.openembedded.org/openembedded-core
  layers: meta
  branch: krogoth

  URI: git://github.com/mozilla-japan/meta-browser.git
  branch: firefox-45.0esr

  URI: git://git.yoctoproject.org/meta-cloud-services
  layers: meta-openstack
  branch: master

  URI: git://git.yoctoproject.org/meta-eca
  layers: meta-eca
  branch: master

  URI: git://github.com/facebook/openbmc.git
  branch: master

  URI: git://git.openembedded.org/meta-openembedded
  layers: meta-gnome, meta-oe, meta-python
  branch: krogoth

  URI: git://github.com/sarnold/meta-small-arm-extra.git
  branch: master


Table of Contents
=================

   I. Adding the comodoo layer to your build
  II. Build an image for Rpi3 with VNC support & fixed screen size
  II. (a) Build configuration
 III. Build an image for Rpi3 & 'Eleduino 7.0 Inch 1024x600 Touch Screen' with VNC support
 III. (a) Build configuration
  IV. HOWTO launch the kiosk
   V. Know issues during WIFI configuration

I. Adding the comodoo layer to your build
=========================================

In order to use this layer, you need to make the build system aware of
it.

Assuming the comodoo layer exists at the top-level of your
yocto build tree, you can add it to the build system by adding the
location of the comodoo layer to bblayers.conf, along with any
other layers needed. e.g.:

BBLAYERS ?= " \
    /path/to/yocto/meta \
    /path/to/yocto/meta-poky \
    /path/to/yocto/meta-yocto-bsp \
    /path/to/yocto/meta-browser \
    /path/to/yocto/meta-cloud-services/meta-openstack \
    /path/to/yocto/meta-comodoo/meta-comodoo \
    /path/to/yocto/meta-eca/meta-eca \
    /path/to/yocto/meta-openbmc \
    /path/to/yocto/meta-openembedded/meta-gnome \
    /path/to/yocto/meta-openembedded/meta-oe \
    /path/to/yocto/meta-openembedded/meta-python \
    /path/to/yocto/meta-small-arm-extra \
  "


II. Build an image for Rpi3 with VNC support & fixed screen size
================================================================

Now, let see how to build the comodoo image for a RaspberryPi 3:

1. [OPTIONAL] sudo apt-get install autoconf2.13
2. git clone git://git.yoctoproject.org/poky
   cd poky/
   git checkout -b krogoth origin/krogoth
3. git clone git://git.openembedded.org/meta-openembedded
   cd meta-openembedded/
   git checkout -b krogoth origin/krogoth
   cd ..
4. git clone git://git.yoctoproject.org/meta-cloud-services
5. git clone git://github.com/sarnold/meta-small-arm-extra.git
6. git clone git://git.yoctoproject.org/meta-eca
7. git clone git://github.com/facebook/openbmc.git meta-openbmc
   # Notice that in this case, you have to provide the name of the folder
   # where to clone the repo
8. git clone git://git.yoctoproject.org/meta-raspberrypi
   # No need to checkout another branch, only master includes raspberrypi3.conf
9. git clone git://github.com/mozilla-japan/meta-browser.git
   # Default branch is firefox-45.0esr
10. git clone git://github.com/indisoluble/meta-comodoo.git
    # Or git clone git@github.com:indisoluble/meta-comodoo.git
11. source oe-init-build-env
12. cd conf/
13. nano bblayers.conf
    # Edit var BBLAYERS as follows:
BBLAYERS ?= " \
    /path/to/yocto/meta \
    /path/to/yocto/meta-poky \
    /path/to/yocto/meta-yocto-bsp \
    /path/to/yocto/meta-browser \
    /path/to/yocto/meta-cloud-services/meta-openstack \
    /path/to/yocto/meta-comodoo/meta-comodoo \
    /path/to/yocto/meta-comodoo/meta-rpi-fixed-fb \
    /path/to/yocto/meta-eca/meta-eca \
    /path/to/yocto/meta-openbmc \
    /path/to/yocto/meta-openembedded/meta-gnome \
    /path/to/yocto/meta-openembedded/meta-oe \
    /path/to/yocto/meta-openembedded/meta-python \
    /path/to/yocto/meta-raspberrypi \
    /path/to/yocto/meta-small-arm-extra \
  "

14. nano local.conf
    # Add following line to the end of the file:
MACHINE ?= "raspberrypi3"

PREFERRED_PROVIDER_virtual/libgl = "mesa"
PREFERRED_PROVIDER_virtual/libgles2 = "mesa"
PREFERRED_PROVIDER_virtual/egl = "mesa"
PREFERRED_PROVIDER_virtual/mesa = "mesa"

BBMASK_append = " \
    /meta-cloud-services/meta-openstack/recipes-connectivity/ \
    /meta-cloud-services/meta-openstack/recipes-core/ \
    /meta-cloud-services/meta-openstack/recipes-devtools/erlang/ \
    /meta-cloud-services/meta-openstack/recipes-devtools/perl/ \
    /meta-cloud-services/meta-openstack/recipes-devtools/qemu/ \
    /meta-cloud-services/meta-openstack/recipes-devtools/ruby/ \
    /meta-cloud-services/meta-openstack/recipes-extended/ \
    /meta-cloud-services/meta-openstack/recipes-graphics/ \
    /meta-cloud-services/meta-openstack/recipes-httpd/ \
    /meta-cloud-services/meta-openstack/recipes-kernel/ \
    /meta-cloud-services/meta-openstack/recipes-support/ \
    /meta-eca/meta-eca/recipes-connectivity/ \
    /meta-eca/meta-eca/recipes-core/ \
    /meta-eca/meta-eca/recipes-devtools/ \
    /meta-eca/meta-eca/recipes-eca/ \
    /meta-eca/meta-eca/recipes-kernel/ \
    /meta-eca/meta-eca/recipes-multimedia/ \
    /meta-eca/meta-eca/recipes-support/ \
    /meta-openbmc/common/recipes-connectivity \
    /meta-openbmc/common/recipes-core \
    /meta-openbmc/common/recipes-extended \
    /meta-openbmc/common/recipes-kernel \
    /meta-openbmc/common/recipes-lib \
    /meta-openbmc/common/recipes-support \
    /meta-openbmc/common/recipes-tpm \
    /meta-openbmc/common/recipes-utils \
    /meta-small-arm-extra/recipes-bsp \
    /meta-small-arm-extra/recipes-core \
    /meta-small-arm-extra/recipes-devtools/opkg \
    /meta-small-arm-extra/recipes-extended \
    /meta-small-arm-extra/recipes-graphics \
    /meta-small-arm-extra/recipes-kernel \
    /meta-small-arm-extra/recipes-qt \
    /meta-small-arm-extra/recipes-support \
"

15. cd ..
16. bitbake comodoo-image-pos

The first image generated with this procedure might not work. In some
cases, after transferring the image to the SD card, inserting it in the raspberrypi
and powering it up, when we connect the ethernet cable to the port, the LEDs
in it do not light. Without a connection, there is not much we can do with the
raspberrypi. My recomendation in this case is:

1. cd /path/to/yocto/build
2. rm -fr tmp/
3. bitbake comodoo-image-pos

This time, the building process will be a lot faster and the new image generated
in /path/to/yocto/build/tmp/deploy/images/raspberrypi3/ should be ok.


II. (a) Build configuration
===========================

BB_VERSION        = "1.30.0"
BUILD_SYS         = "x86_64-linux"
NATIVELSBSTRING   = "universal"
TARGET_SYS        = "arm-poky-linux-gnueabi"
MACHINE           = "raspberrypi3"
DISTRO            = "poky"
DISTRO_VERSION    = "2.1.1"
TUNE_FEATURES     = "arm armv7ve vfp thumb neon vfpv4 callconvention-hard cortexa7"
TARGET_FPU        = "hard"
meta              
meta-poky         
meta-yocto-bsp    = "krogoth:8c69f7d56cbd496aa01ba0738675a170826a536b"
meta-browser      = "firefox-45.0esr:14199ac070905b101e7bb0919748986c33374649"
meta-openstack    = "master:6043a4a17dc5ca9080dac7789e38620b7b1aa372"
meta-comodoo      
meta-rpi-fixed-fb = "master:d322572d40e42ddf3dbdfbafc9c7e5ebe21a0940"
meta-eca          = "master:77c41b86a36fa65250deb16b13b13945afc52be4"
meta-openbmc      = "master:d92449abeadec00df6ddfec58a53a0969721dabe"
meta-gnome        
meta-oe           
meta-python       = "krogoth:895b25b387cae428c38990f4d2747603ee9dc92d"
meta-raspberrypi  = "master:cc64d6324d1543f009f0c010d720e74b7cb9f5d5"
meta-small-arm-extra = "master:f0f64dcea0dfe5aafacb5b607002cc2acb6aa512"


III. Build an image for Rpi3 & 'Eleduino 7.0 Inch 1024x600 Touch Screen' with VNC support
=========================================================================================

To build an image for this hardware:

- RaspberryPi 3
- Eleduino 7.0 Inch 1024x600 Pixel IPS Hdmi Input Capacitive Touch Screen[1]

Follow the same steps described in section II but in steps 13,
modify the file bblayers.conf with this content instead:
BBLAYERS ?= " \
  /home/indi_usr/Documents/comodoo/repositories/poky/meta \
  /home/indi_usr/Documents/comodoo/repositories/poky/meta-poky \
  /home/indi_usr/Documents/comodoo/repositories/poky/meta-yocto-bsp \
  /home/indi_usr/Documents/comodoo/repositories/poky/meta-browser \
  /home/indi_usr/Documents/comodoo/repositories/poky/meta-cloud-services/meta-openstack \
  /home/indi_usr/Documents/comodoo/repositories/poky/meta-comodoo/meta-comodoo \
  /home/indi_usr/Documents/comodoo/repositories/poky/meta-comodoo/meta-rpi-eleduino-7inch-1024x600 \
  /home/indi_usr/Documents/comodoo/repositories/poky/meta-eca/meta-eca \
  /home/indi_usr/Documents/comodoo/repositories/poky/meta-openbmc \
  /home/indi_usr/Documents/comodoo/repositories/poky/meta-openembedded/meta-gnome \
  /home/indi_usr/Documents/comodoo/repositories/poky/meta-openembedded/meta-oe \
  /home/indi_usr/Documents/comodoo/repositories/poky/meta-openembedded/meta-python \
  /home/indi_usr/Documents/comodoo/repositories/poky/meta-raspberrypi \
  /home/indi_usr/Documents/comodoo/repositories/poky/meta-small-arm-extra \
  "


III. (a) Build configuration
============================

BB_VERSION        = "1.30.0"
BUILD_SYS         = "x86_64-linux"
NATIVELSBSTRING   = "universal"
TARGET_SYS        = "arm-poky-linux-gnueabi"
MACHINE           = "raspberrypi3"
DISTRO            = "poky"
DISTRO_VERSION    = "2.1.1"
TUNE_FEATURES     = "arm armv7ve vfp thumb neon vfpv4 callconvention-hard cortexa7"
TARGET_FPU        = "hard"
meta              
meta-poky         
meta-yocto-bsp    = "krogoth:8c69f7d56cbd496aa01ba0738675a170826a536b"
meta-browser      = "firefox-45.0esr:14199ac070905b101e7bb0919748986c33374649"
meta-openstack    = "master:6043a4a17dc5ca9080dac7789e38620b7b1aa372"
meta-comodoo      
meta-rpi-eleduino-7inch-1024x600 = "master:d322572d40e42ddf3dbdfbafc9c7e5ebe21a0940"
meta-eca          = "master:77c41b86a36fa65250deb16b13b13945afc52be4"
meta-openbmc      = "master:d92449abeadec00df6ddfec58a53a0969721dabe"
meta-gnome        
meta-oe           
meta-python       = "krogoth:895b25b387cae428c38990f4d2747603ee9dc92d"
meta-raspberrypi  = "master:cc64d6324d1543f009f0c010d720e74b7cb9f5d5"
meta-small-arm-extra = "master:f0f64dcea0dfe5aafacb5b607002cc2acb6aa512"


IV. HOWTO launch the kiosk
==========================

1. Connect an "Eleduino Touch Screen"[1] & a keyboard to the RaspberryPi.
2. Switch it on.
3. Wait for a few seconds until a list of WIFI's appears on screen.
4. Select and configure your own. Then press 'Continue'.
5. A new screen will appear, where you can type the URL of the remote
   Odoo server. Do it and press 'Use Server URL'
6. Finally, the Odoo login page will be presented.

In case you built an image only with VNC support, repeat the steps
described before but after switching on the Rpi, open an SSH connection
to the device, launch the 'x11vnc' app and then execute a VNC client
in your host computer. From this point on, all the steps are the same.


V. Know issues during WIFI configuration
========================================

* Type a passphrase smaller than 8 characteres:
  In this case, when the list of available WIFIs is shown again,
  yours is shown with a red circle and there is no way to connect
  to it, even if you type the right password.
  If you are in this situation: 1º make sure your passphrase has
  between 8 and 64 characters, 2º restart the device, 3º try
  again with the right passphrase.

* WIFI is disconnected or the decive lost connection for a short
  period of time:
  It should reconnect on its own but it does not. I am afraid this
  is a WIP so, until we fix this problem, you have to reboot your
  device. On the bright side, it will automatically reconnect after
  the reboot.

[1] http://www.eleduino.com/7-0-Inch-1024x600-Pixel-IPS-Hdmi-Input-Capacitive-Touch-Screen-Support-Raspberry-pi-Banana-Pi-Pro-Be-p10533.html
