This README file contains information on the contents of the
comodoo layer.

Please see the corresponding sections below for details.


Dependencies
============

This layer depends on:

  URI: git://git.openembedded.org/bitbake
  branch: krogoth

  URI: git://git.openembedded.org/openembedded-core
  layers: meta
  branch: krogoth

  URI: git://git.openembedded.org/meta-openembedded
  layers: meta-xfce, meta-python, meta-oe, meta-gnome
  branch: krogoth-next

  URI: git://github.com/OSSystems/meta-browser.git
  branch: krogoth


Table of Contents
=================

  I. Adding the comodoo layer to your build (sato)
  II. Adding the comodoo layer to your build (xfce)


I. Adding the comodoo layer to your build (sato)
=================================================

In order to use this layer, you need to make the build system aware of
it.

Assuming the comodoo layer exists at the top-level of your
yocto build tree, you can add it to the build system by adding the
location of the comodoo layer to bblayers.conf, along with any
other layers needed. e.g.:

BBLAYERS ?= " \
    /path/to/yocto/meta \
    /path/to/yocto/meta-poky \
    /path/to/yocto/meta-yocto-bsp \
    /path/to/yocto/meta-openembedded/meta-oe \
    /path/to/yocto/meta-openembedded/meta-gnome \
    /path/to/yocto/meta-browser \
    /path/to/yocto/meta-comodoo \
  "

Now, let see with some more detail how to build the comodoo image
for a Raspberry Pi 3:

1. git clone git://git.yoctoproject.org/poky
   cd poky/
   git checkout -b krogoth origin/krogoth
2. git clone git://git.yoctoproject.org/meta-raspberrypi
   # No need to checkout another branch, only master branch has raspberrypi3.conf
3. git clone git://git.openembedded.org/meta-openembedded
   cd meta-openembedded/
   git checkout -b krogoth-next origin/krogoth-next
   cd ..
4. git clone git://github.com/OSSystems/meta-browser.git
   cd meta-browser/
   git checkout -b krogoth origin/krogoth
   cd ..
5. git clone git://github.com/indisoluble/meta-comodoo.git
   # Or git clone git@github.com:indisoluble/meta-comodoo.git
6. source oe-init-build-env
7. cd conf/
8.nano bblayers.conf
   # Edit var BBLAYERS as follows:
BBLAYERS ?= " ng 
    /path/to/yocto/meta \
    /path/to/yocto/meta-poky \
    /path/to/yocto/meta-yocto-bsp \
    /path/to/yocto/meta-raspberrypi \
    /path/to/yocto/meta-openembedded/meta-oe \
    /path/to/yocto/meta-openembedded/meta-gnome \
    /path/to/yocto/meta-browser \
    /path/to/yocto/meta-comodoo \
  "
8. nano local.conf
   # Add following line to the end of the file:
MACHINE ?= "raspberrypi3"
9. cd ..
10. bitbake comodoo-image-sato

During the building process, you might see some of the following
messages:

- WARNING: userland-git-r5 do_package_qa: QA Issue: /usr/bin/dtoverlay-post
  contained in package userland requires /bin/bash, but no providers found in
  RDEPENDS_userland? [file-rdeps] 
userland-git is part of the meta-raspberrypi layer and although bash is not in
RDEPENDS_userland, nevertheless it is included in the generated image. So,
do not worry for this message.

- ERROR: Taskhash mismatch 97eb15ad80a7746b7bb6a9c61915c014 verses
  a0c7246dc6a884bdea88db870610218a for
  /path/to/yocto/meta-comodoo/recipes-core/images/comodoo-image-sato.bb.do_image_rpi_sdimg
Although this is an error, the rpi_sdimg file is created in /path/to/yocto/build/tmp/deploy/images/raspberrypi3/.
If not, just run again  'bitbake comodoo-image-sato'.

Also, the first image generated with this procedure might not work. In some
cases, after transferring the image to the SD card, inserting it in the raspberrypi
and powering it up, when we connect the ethernet cable to the port, the LEDs
in it do not light. Without a connection, there is not much we can do with the
raspberrypi. My recomendation in this case is:

1. cd /path/to/yocto/build
2. rm -fr tmp/
3. bitbake comodoo-image-sato

This time, the building process will be a lot faster and the new image generated
in /path/to/yocto/build/tmp/deploy/images/raspberrypi3/ should be ok.


II. Adding the comodoo layer to your build (xfce)
=================================================

The steps described before explain how to build the image for comodoo
project with sato window manager. Now, let see how to do the same with
xfce:

1. git clone git://git.yoctoproject.org/poky
   cd poky/
   git checkout -b krogoth origin/krogoth
2. git clone git://git.yoctoproject.org/meta-raspberrypi
   # No need to checkout another branch, only master branch has raspberrypi3.conf
3. git clone git://git.openembedded.org/meta-openembedded
   cd meta-openembedded/
   git checkout -b krogoth-next origin/krogoth-next
   cd ..
4. git clone git://github.com/OSSystems/meta-browser.git
   cd meta-browser/
   git checkout -b krogoth origin/krogoth
   cd ..
5. git clone git://github.com/indisoluble/meta-comodoo.git
   # Or git clone git@github.com:indisoluble/meta-comodoo.git
6. source oe-init-build-env
7. cd conf/
8.nano bblayers.conf
   # Edit var BBLAYERS as follows:
BBLAYERS ?= "
    /path/to/yocto/meta \
    /path/to/yocto/meta-poky \
    /path/to/yocto/meta-yocto-bsp \
    /path/to/yocto/meta-raspberrypi \
    /path/to/yocto/meta-openembedded/meta-xfce \
    /path/to/yocto/meta-openembedded/meta-python \
    /path/to/yocto/meta-openembedded/meta-oe \
    /path/to/yocto/meta-openembedded/meta-gnome \
    /path/to/yocto/meta-browser \
    /path/to/yocto/meta-comodoo \
  "
8. nano local.conf
   # Add following line to the end of the file:
MACHINE ?= "raspberrypi3"
9. cd ..
10. bitbake comodoo-image-xfce
